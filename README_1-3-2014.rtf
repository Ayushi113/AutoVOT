{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf370
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red243\green235\blue0;\red128\green128\blue128;\red255\green83\blue8;
\red26\green26\blue26;\red205\green205\blue205;\red170\green13\blue145;\red134\green205\blue77;\red217\green11\blue0;
\red255\green255\blue193;}
\margl1440\margr1440\vieww16980\viewh17840\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 autovot\
=======\
\pard\tx529\pardeftab529\pardirnatural
\cf0 \CocoaLigature0 \
\pard\tx529\pardeftab529\pardirnatural

\b \cf0 In this readme:
\b0 \
I. Out of the box: what the user gets when they download the auto_vot package\
II. User provided files and directories: guide to how to structure/name format files and folders\
III. Compiling\
IV. Training\
V. Testing\
VI. Additional options for user \
\CocoaLigature1 VII. Possible errors\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc
\cf0   ###################	\
## 
\b I. Out of the box:
\b0  ##\
###################\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
When you clone the auto_vot repository to your local drive you'll have access to the following:\
	
\b autovot
\b0 /: master folder\
	
\b auto_vot
\b0 /\
		auto_vot/
\b bin
\b0 /: Contains files that will be doing the training/testing\
		auto_vot/
\b code
\b0 : \
			auto_vot/code/
\b audiofile-0.3.4
\b0 /:\
			auto_vot/code/
\b learning_tools
\b0 /...:\
			auto_vot/code/
\i Makefile
\i0  :\
			auto_vot/code/
\b vot_predictor
\b0 /: Contains files that will construct classifiers\
\
There are two modes for training/decoding: \
	
\b Mode 1
\b0 : The handling of feature extraction is hidden. The train can get cross-validation set or automatically select 20% of the training data. \
	
\b Mode 2:
\b0  Training and decoding is done after feature extraction. (\cb2 clarify\cb1 )\
\pard\pardeftab720
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc
\cf0 #####################################\
## 
\b II. User provided files and directories 
\b0 ##\
#####################################\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc
\cf0 #################\
## 
\b II.a
\b0  
\b File format 
\b0 ##\
#################\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 TextGrid Format:
\b0 \
	For training: the VOT tier must contain hand annotated segments with a common label\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i \cf0 		In the CAS7d data, VOT window is marked with "pos"
\i0 \
		We recommend training on no fewer than 50 tokens\
	For testing/running: the VOT tier must contain intervals with a common label indicating a window approximating where VOT is likely to occur\
	
\i 	In the CAS data, these intervals are labeled "pos" and start and end 30ms beyond the boundaries of the force-aligned VOT prediction.
\i0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 Wav Format:
\b0 \
	16kHz\

\b Naming conventions:
\b0 \
	TextGrids and corresponding wavs should have the same filename, differing only in their extension.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc
\cf0 ######################\
## 
\b II.b Directory format 
\b0 ##\
######################\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 Within the master autovot folder: make following directories:\
	
\b data
\b0 /\
		data/
\b train/
\b0 : This directory should contain your 
\i training
\i0  TextGrids and wav files.\
		Training data should also be divided into subcategories:\
				voiced: textgrids and wavs\
				voiceless: textgrids and wavs\
		data/
\b test
\b0 /: This directory should contain 
\i all
\i0  your files to be run. \
			TextGrids should be divided into subfolders, e.g.:\
				
\b voiced: 
\b0 TextGrids only\
				
\b voiceless: 
\b0 TextGrids only\
			All wavs should be in their own folder, named "wav":\
				
\b wav: 
\b0 wavs only\
\
	
\b experiments*
\b0 /:\cf3 \
\cf0 		experiments/
\b config
\b0 /: This folder should contain four lists of filenames for each subcategory, as determined by the user:\
			Test TextGrids\
			Test Wavs\
			Train TextGrids\
			Train Wavs\
\
			Lists can either be a) provided by the user or b) generated using the helper scripts described below\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i \cf0 			For the CAS data, we have two subcategories (voiced, voiceless), so we've provided 8 lists.
\i0 \
				\
		experiments/
\b models
\b0 /: This may remain empty for now. It will be used to hold classifiers \cf3 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc
\cf0 \
#####################################\
## 
\b II.c Helper files for generating file lists
\b0  ##\
#####################################\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \cb4 TO DO: Not currently set up for users
\f1 \cf5 \cb6 \
\pard\pardeftab720

\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 To access (not on GitHub currently): makeConfigFiles.sh which should be moved into the user's data/?\
	Move makeConfigFiles.sh to data/\
	Navigate to data/\
	Run makeConfigFiles.sh to generate a list of TextGrids and wavs:\
	\
		$ ./makeConfigFiles.sh\
	\
	If successful, no text will appear on the command line, but 8 .txt files will be generated in experiments/config/.\
	These text files will contain lists of the TextGrids and wav files for voiced/voiceless training/testing:\
		voicedTestTgList.txt		voicedTrainWavList.txt		voicelessTrainTgList.txt\
		voicedTestWavList.txt	voicelessTestTgList.txt		voicelessTrainWavList.txt\
		voicedTrainTgList.txt		voicelessTestWavList.txt\
\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc
\cf0 ##################\
## 
\b III. COMPILING
\b0  ##\
##################\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 1. COMPILE AUDIO FILE LIBRARY.
\f1\b0 \cf5 \
\pard\pardeftab720
\cf5 \cb2 This won't be necessary soon
\f0 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 	Navigate to auto_vot/code/audiofile-0.3.4/\
\
		$ make\
\
	If successful, a lot of text will appear on the screen, the last line being:\
\
		
\i "make[2]: Nothing to be done for `all-am'."
\i0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 2. COMPILE CODE
\b0 \
	Navigate to auto_vot/code/	\
		\
		$ make\
\
	If successful, a lot of text will appear on the screen, the last line being:
\i \
		[make] Compiling completed.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \cb2 THIS isn't implemented yet\cb1 \
	
\i0 Then:\
		# make install\
	Which will install the auto_vot package and will set the path\

\i \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc

\i0 \cf0 ################\
## 
\b IV. TRAINING
\b0  ##\
################ \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 0. ADD LOCATION OF SCRIPTS TO PATH\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0 \cf0 \cb2 This won't be necessary soon
\b \cb1 \
	Navigate to experiments/\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0 \cf0 		$
\b  
\f2\b0 \CocoaLigature0 export PATH=$PATH:/Users/mcgillLing/3_MLML/autovot/autovot/auto_vot/bin
\f0 \CocoaLigature1 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 1. TRAIN CLASSIFIER\
\
MODE 1:\
AUTO_VOT_TRAIN.PY\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i\b0 \cf0 \
Usage:
\i0\b \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0 \cf0 auto_vot_train.py [-h] [--vot_tier VOT_TIER] [--vot_mark VOT_MARK]\
                         [--window_tier WINDOW_TIER]\
                         [--window_mark WINDOW_MARK] [--window_min WINDOW_MIN]\
                         [--window_max WINDOW_MAX]\
                         [--cv_textgrid_list CV_TEXTGRID_LIST]\
                         [--cv_wav_list CV_WAV_LIST]\
                         [--max_num_instances MAX_NUM_INSTANCES]\
                         [--logging_level LOGGING_LEVEL]\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 MODE 2:\
AUTO_VOT_TRAIN_AFTER_FE.PY\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i\b0 \cf0 Usage:
\i0\b \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0 \cf0 auto_vot_train_after_fe.py [-h] [--logging_level LOGGING_LEVEL]\
                                  features_filename labels_filename\
                                  model_filename\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 EXAMPLE USING MODE 1:
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i \cf0 Arguments used in this example:
\i0 \
	newseg = name of tier containing hand corrected VOT for training\
	PX = label of hand corrected voiceless VOT\
	BX = label of hand corrected voiced VOT\
	voicelessTrainTgList.txt = user generated list of TextGrids for voiceless training\
	voicelessTrainWavList.txt = user generated list of wav files for voiceless training	voicedTrainTgList.txt = user generated list of TextGrids for voiced training\
	voicedTrainWavList.txt = user generated list of wav files for voiced training\
\

\i Order of operations behind the scenes in this step:
\i0 \
	VotFrontEnd2 processes all files for training\
	VotFrontEnd2 extracts features from training data\
	InitialVotTrain trains on extracted features\
	InitialVotDecode preserves results of training\
	\
This must be done separately for each subcategory\
For the CAS data, this means training on both voiced and voiceless tokens.\
\

\i Navigate to experiments/ and run:
\i0 \
\
		$ auto_vot_train.py --vot_tier newseg --vot_mark PX config/voicelessTrainTgList.txt  config/voicelessTrainWavList.txt models/theaVoicelessModel.classifier \
	\
		$ auto_vot_train.py --vot_tier newseg --vot_mark BX config/VoicedTrainTgList.txt  config/VoicedTrainWavList.txt models/theaVoicedModel.classifier \
	\

\i 		If successful, the output will look like:
\i0 \
			14:23:49.682 [VotFrontEnd2] INFO: Processing 101 files...\
			14:24:00.131 [VotFrontEnd2] INFO: Features extraction completed.\
			14:24:23.706 [InitialVotTrain] INFO: Training completed.\
			14:24:30.326 [InitialVotDecode] INFO: Decoding completed.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 \
		- you can check if it worked by looking within the models folder. positive and negative classifier files should be generated for each instance of training.\
\
\
\cb2 TODO: EXAMPLE USING MODE 2
\i\b0 \cb1 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc

\i0 \cf0 ######################\
## 
\b V. VOT DECODING
\b0  ##\
######################\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 MODE 1\
AUTO_VOT_DECODE.PY\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i\b0 \cf0 Usage\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i0 \cf0 auto_vot_decode.py [-h] [--vot_tier VOT_TIER] [--vot_mark VOT_MARK]\
                          [--window_tier WINDOW_TIER]\
                          [--window_mark WINDOW_MARK]\
                          [--window_min WINDOW_MIN] [--window_max WINDOW_MAX]\
                          [--min_vot_length MIN_VOT_LENGTH]\
                          [--max_vot_length MAX_VOT_LENGTH]\
                          [--logging_level LOGGING_LEVEL]\
                          wav_filename textgrid_filename model_filename\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 MODE 2\
AUTO_VOT_DECODE_AFTER_FE.PY\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i\b0 \cf0 Usage
\i0 \
auto_vot_decode_after_fe.py [-h] [--logging_level LOGGING_LEVEL]\
                                   features_filename labels_filename\
                                   model_filename\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 \
\
Example using MODE 1:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0 \cf0 This will need to be done once for each subcategory\
	Navigate to experiments/\
	For CAS, run script as follows for 
\b VOICELESS
\b0 \
\
\pard\tx529\pardeftab529\pardirnatural

\f2\fs22 \cf0 \CocoaLigature0 n=`wc -l < config/voicelessTestTgList.txt`\
for line in $(seq 1 $n)\
do\
	echo $n\
	tg=`sed -n "$\{line\}p" config/voicelessTestTgList.txt`\
	wav=`sed -n "$\{line\}p" config/voicelessTestWavList.txt`\
\
	auto_vot_decode.py --vot_tier newSeg --vot_mark pos "$wav" "$tg" models/theaVoicelessModel.classifier\
    \
done\cf7 \
\
\
\pard\tx529\pardeftab529\pardirnatural

\f0\fs24 \cf0 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 	Run script as follows for 
\b VOICED\
\pard\tx529\pardeftab529\pardirnatural

\f2\b0\fs22 \cf0 \CocoaLigature0 	## note different min_vot_length here -- this is important, since\
	## the default is 15 ms, and voiced stops often have VOT < 15 ms\
\pard\tx529\pardeftab529\pardirnatural

\f0\fs24 \cf0 \CocoaLigature1 \
\pard\tx529\pardeftab529\pardirnatural

\f2\fs22 \cf0 \CocoaLigature0 n=`wc -l < config/voicedTestTgList.txt`\
for line in $(seq 1 $n)\
do\
	echo $n\
	tg=`sed -n "$\{line\}p" config/voicedTestTgList.txt`\
	wav=`sed -n "$\{line\}p" config/voicedTestWavList.txt`    \
	auto_vot_decode.py --vot_tier newSeg --vot_mark pos --min_vot_length 5 --max_vot_length 100 "$wav" "$tg" models/theaVoicedModel.classifier    \
done\cf7 \
\
\pard\tx529\pardeftab529\pardirnatural

\f0\fs24 \cf0 \CocoaLigature1 \

\i Output if successful:
\i0 \
	16:47:26.482 [VotFrontEnd2] INFO: Processing 1 files...\
	16:47:26.597 [VotFrontEnd2] INFO: Features extraction completed.\
	16:47:27.161 [InitialVotDecode] INFO: Decoding completed.\
\

\i Possible warnings:
\i0 \
If TextGrid does not have correct window marker:\
	16:47:36.295 [auto_vot_extract_features.py] WARNING: The mark 'pos' has not found in tier 'newSeg' of /Users/mcgillLing/3_MLML/autovot/autovot/data/test/voiceless/cas7D_1054_1_1.TextGrid\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc
\cf0 #####################################\
## 
\b VI. ADDITIONAL OPTIONS FOR USER
\b0  ##\
#####################################\
\cb2 This will be incorporated into the above sections\cb1 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 AUTO_VOT_TRAIN.PY
\b0 	\

\b Usage:\
usage: auto_vot_train.py [-h] [--vot_tier VOT_TIER] [--vot_mark VOT_MARK]\
                         [--window_tier WINDOW_TIER]\
                         [--window_mark WINDOW_MARK] [--window_min WINDOW_MIN]\
                         [--window_max WINDOW_MAX]\
                         [--cv_textgrid_list CV_TEXTGRID_LIST]\
                         [--cv_wav_list CV_WAV_LIST]\
                         [--max_num_instances MAX_NUM_INSTANCES]\
                         [--logging_level LOGGING_LEVEL]\
		
\b0 \
		\
\
AUTO_VOT_DECODE.PY\

\b usage: auto_vot_decode.py [-h] [--vot_tier VOT_TIER] [--vot_mark VOT_MARK]\
                          [--window_tier WINDOW_TIER]\
                          [--window_mark WINDOW_MARK]\
                          [--window_min WINDOW_MIN] [--window_max WINDOW_MAX]\
                          [--min_vot_length MIN_VOT_LENGTH]\
                          [--max_vot_length MAX_VOT_LENGTH]\
                          [--logging_level LOGGING_LEVEL]\
                          wav_filename textgrid_filename model_filename\
		Decode AutoVOT after features extraction
\b0 \
		\

\b 		positional arguments:
\b0 \
		  wav_filename          a Wav filename\
		  textgrid_filename     TextGrid with a window tier\
		  model_filename        output model file name\
		\
		optional arguments:\
		  -h, --help            show this help message and exit\
		  --vot_tier VOT_TIER   name of the tier to extract VOTs from\
		  --vot_mark VOT_MARK   VOT mark value (e.g., "pos", "neg") or "*" for any\
		                        string\
		  --window_tier WINDOW_TIER\
		                        used this window as a search window for training. If\
		                        not given, a constant window with parameters\
		                        [window_min, window_max] around the manually labeled\
		                        VOT will be used\
		  --window_mark WINDOW_MARK\
		                        window mark value or "*" for any string\
		  --window_min WINDOW_MIN\
		                        window left boundary (in msec) relative to the VOT\
		                        right boundary (usually should be negative, that is,\
		                        before the VOT right boundary.)\
		  --window_max WINDOW_MAX\
		                        window right boundary (in msec) relative to the VOT\
		                        right boundary (usually should be positive, that is,\
		                        after the VOT left boundary.)\
		  --min_vot_length MIN_VOT_LENGTH\
		                        minimum allowed length of predicted VOT (in msec) in\
		                        decoding\
		  --max_vot_length MAX_VOT_LENGTH\
		                        maximum allowed length of predicted VOT (in msec) in\
		                        decoding\
		  --debug               verbose printing\
	\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc
\cf0 ##################################################\
## 
\b VII. ISSUES LEFT TO ADDRESS AND SOME ERRORS 
\b0 ##\
##################################################\
\
\pard\tx529\pardeftab529\pardirnatural

\b \cf0 \cb2 \CocoaLigature0 UPDATES FROM YOSSI (28/2/2014)
\b0 \cb1 \
\pard\pardeftab720

\f1\fs26 \cf5 \CocoaLigature1 Please notice the new flag of all python and c++ programs --logging_level which sets the output description detail: DEBUG is the most detailed, INFO is the standard (now very brief), and there are more values\
\
\pard\pardeftab720

\b \cf5 Also notice two modes of operations:\
Auto_vot_train.py\
Auto_vot_decode.py\
Where the handling of the feature extraction is hidden. The train can get cross-validation set or automatically pick 20% of the training data.\'a0\
Or\
Auto_vot_extract_features.py\
Auto_vot_train_after_fe.py\
Auto_vot_decode_after_fe.py
\b0 \cf5 \
\
Those modes should be explained in the tutorial example.\'a0
\f0\fs24 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc
\cf0 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 \cb2 ISSUES LOG\
\pard\tx529\pardeftab529\pardirnatural
\cf0 \cb1 \CocoaLigature0 \
\cb8 ADDRESSED:
\b0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab529\pardirnatural

\b \cf0 ----- "
\b0 Textgrids with new predictions should be saved with the same name as before"\
	- old text grids are overwritten\

\b ----- "
\b0 There should be a less verbose option"\
	- INFO is standard, which is less verbose\
	- DEBUG is more verbose\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab529\pardirnatural

\b \cf0 \CocoaLigature1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \cb2 TODO: MORGAN AND YOSSI
\b0 \cb1 \
\

\b BEFORE TRAINING/DECODING:\
----- Eliminate need to compile "auto_vot/code/auiofile-0.3.4/\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0 \cf9 I don't think this is implemented yet? I was unable to do "make install" and couldn't successfully run "make" in auto_vot/code without first running "make" in audiofile-0.3.4
\b \cf0 \
	From Yossi 13/2/2014: 
\f1\b0 \cf5 - After "make" the user should type "make install" and it will install the auto_vot package (actually the "bin" directory) and will set the path. So the user needs only to create a directory called "experiments" or whatever with her/his scripts (makeConfigFiles.sh can be located there).\'a0
\fs26 \
\pard\pardeftab720

\fs24 \cf5 \
	- After compilation the user can delete the code and bin directory which were downloaded from the web (since they will be installed in the system) and the user will have not "see" the auto_vot directory (although he/she will be able to access it). Hence you need to explain all utilities and programs under the bin directory.\
\pard\pardeftab720

\f0 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 ----- Check if data is in proper format
\b0 \
- are wavs 16kHz?\
- are text grids saved as regular TextGrid and not "short text files"?\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab529\pardirnatural
\cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs22 \cf0 \CocoaLigature0 AUTO_VOT_DECODE.PY
\b0 \

\b\fs24 \CocoaLigature1 ----- 
\fs22 \CocoaLigature0 Bug in taking window_tier as input
\b0  (there were a couple instances where the prediction was made outside of the window tier): \
\pard\pardeftab720

\f1\fs26 \cf5 \CocoaLigature1 	From Morgan 13/2/2014: "auto_vot_decode.py is supposed to be able to just take a window tier as input. \'a0(so --window_tier is filled in, but not --vot_tier). But this didn't work last time I tried (that's the \cf5 \cb10 bug\cf5 \cb1 ), so I used --vot_tier instead. \'a0And what the program does if you specify just vot_tier is start looking for the onset of VOT some amount before the start of the tier -- I think 100 ms."
\f0\fs24 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 \cb2 TODO: THEA\cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0 \cf0 Try running on concatenated files\
change makeConfigFiles.sh to be run from experiments\
run example using mode 2\
explain everything in bin directory\
provide training from cas7d data (not cas4d)\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 \cb2 POSSIBLE SUGGESTIONS
\b0 \cb1 \
\

\b ----- Provide experiments folder for user containing makeConfigFiles.sh?
\b0 \
- maybe not necessary\'85\
\
\pard\tx529\pardeftab529\pardirnatural

\b\fs22 \cf0 \CocoaLigature0 AUTO_VOT_DECODE.PY:
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs24 \cf0 \CocoaLigature1 ----- 
\fs22 \CocoaLigature0 option to run many files
\b0  (like CAS data now) 
\b or single file
\b0  (what CAS data will be by release time)\
	- This might already be an option that I'm just unclear on\'85 right now we're running many files in a loop, but the goal is to have a s\
\pard\tx529\pardeftab529\pardirnatural
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs24 \cf0 \CocoaLigature1 ----- 
\b0 \CocoaLigature0 It would be helpful if "[VotFrontEnd2] 
\b INFO
\b0 :" still included the 
\b name of each file being processed
\b0  and what 
\b percentage of files have been processed
\b0  (though this less verbose option looks great otherwise)
\fs22 \
\pard\tx529\pardeftab529\pardirnatural
\cf0 	- for some files I get the error "Index error: list index out of range" but I don't know which files they're for with the new format\
\
- What is the number (i.e. 686 for voiced, 724 for voiceless) that's generated between file info?\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs24 \cf0 \CocoaLigature1 ----- \CocoaLigature0 An output message for when all files have been decoded (e.g. "All done")\
\
----- Old text grids could be saved in a new directory (e.g. "originalTgs")\
\
----- Problematic files could be saved in a new directory (e.g. "problematic") or listed in a .txt file\
	- 
\b0 there were a couple files that didn't have a window interval. The user can easily fix this but it'd be better if files like this were moved/listed somewhere as opposed to just being generated in the decode output.\
\pard\tx529\pardeftab529\pardirnatural
\cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 \cb2 \CocoaLigature1 OTHER QUESTIONS
\b0 \cb1 \
There seems to be no -debug option? Am I missing something?\
I'm confused by --logging_level?\
How does the user choose whether to provide training data or automatically \
I'm confused by the option of a window tier for auto_vot_train.py? Why would user supply this rather than vot_tier and vot_mark?\
Is it possible to interrupt training/decoding process? keyboard interrupt doesn't work at the moment.\CocoaLigature0 \
What is the number (i.e. 686 for voiced, 724 for voiceless) that's generated between file info?\CocoaLigature1 \
\
\

\b \cb2 ERRORS AND WARNINGS I'VE ENCOUNTERED
\b0 \cb1 \
\pard\tx529\pardeftab529\pardirnatural
\cf0 \

\b \cb9 ERROR: Make install in auto_vot/code:
\b0 \cb1 \
	[make] Installing binaries.\
	make[1]: *** No rule to make target `install'.  Stop.\
	make: *** [install] Error 11\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 	\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 \cb9 ERROR: MAKING CONFIG FILES
\b0 \cb1 \
 	(makeConfigFiles.sh can't generate file lists:)\
	Error (which is reiterated for every file in data)\
		./makeConfigFiles.sh: line 110: ../experiments/config/voicedTestTgList.txt: No such file or directory\
		./makeConfigFiles.sh: line 111: ../experiments/config/voicedTestWavList.txt: No such file or directory\
	Solution: \
		double check to see that all subdirectories (critically: config/) exist within experiments\
		is makeConfigFiles in data/?\
	\
\

\b \cb9 ERROR: TRAINING CLASSIFIER\cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i \cf0 	current file=79 /var/folders/3f/36223fgx7xn2f3l5dn_0v1km0000gn/T/tmpLzLrG_/features/cas4D_1635_15_1_0.993.txt\
	...\
	Unable to open models/theaVoicelessModel.classifier.pos\
	wpa168067:experiments mcgillLing$\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i0\b \cf0 	\
	SOLUTION: 
\b0 no models were generated because I didn't make a models folder
\i \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i0\b \cf0 \cb9 WARNING: TRAINING VOICED CLASSIFIER:
\i\b0 \cb1 \
	14:53:18.976 [InitialVotTrain] WARNING: Hinge loss is less than zero. This is due a short VOT in training data.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i0 \cf0 	\
	This warning appeared 5 times for me when running training the voiced classifier on the cas4d training data\
	What does the user need to know about this/ is there anything the user can do to avoid this warning?\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 \cb9 ERROR: RUNNING AUTO_VOT_DECODE.PY
\b0 \cb1 \
	[auto_vot_extract_features.py] WARNING: The mark 'pos' has not found in tier 'newSeg' of /Users/mcgillLing/3_MLML/autovot/autovot/data/test/voiced/	cas7D_1717_2_1.TextGrid\
	\
	
\b SOLUTION
\b0 : make an interval on the newSegTier! (this text grid didn't have one for some reason)
\i \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i0 \cf0 \
	}